<div><a href="/">Home</a></div>
<h1>{{title}}</h1>
<h2><a href="https://developer.paypal.com/braintree/docs/reference/general/testing#valid-card-numbers"
    target="_blank">Valid Test Cards</a>
</h2>

<!----------------- Hosted fields example  ------------------>
<div style="background-color:aliceblue">
  <hr>
  <h2>Hosted Fields example</h2>
  <hr>

  <div style="width:600px">
    <form action="/bt/hf/payment/checkout" id="my-sample-form" method="post">
      <div style="padding:10px">
        <label for="card-number" style="padding:5px;margin-top:5px">Card Number</label>
        <div id="card-number" style="height:30px;border-style:solid;border-color:lightgray"></div>

      </div>
      <div style="padding:10px">
        <label for="cvv" style="margin-top:5px">CVV</label>
        <div id="cvv" style="height:30px;border-style:solid;border-color:lightgray"></div>

      </div>

      <div style="padding:10px">
        <label for="expiration-date" style="margin-top:5px">Expiration Date</label>
        <div id="expiration-date" style="height:30px;border-style:solid;border-color:lightgray"></div>

      </div>
      <div style="padding:10px">
        <input id="save-for-next-purchase" type="checkbox">
        <label for="save-for-next-purchase" style="margin-top:5px">Save details for next purchase</label>
      </div>

      <div style="padding:10px">
        <input id="verify-cc" type="checkbox">
        <label for="verify-cc" style="margin-top:5px">Verify Credit Card</label>
      </div>


      <input type="hidden" id="hf-nonce" name="payment_method_nonce" />
      <input type="hidden" id="hf_save_for_next_purchase" name="hf_save_for_next_purchase" />
      <input type="hidden" id="verify_cc" name="verify_cc" />
      <input type="hidden" id="isDesiredToBeDeclined" name="isDesiredToBeDeclined" />


      <div style="padding:10px">
        <input type="submit" value="Make Payment" id="pay" disabled />
      </div>

    </form>
  </div>


</div>

<!-- test card -->
<div style="color:gray">
  <p><a href="https://developer.paypal.com/braintree/docs/guides/credit-cards/testing-go-live/node" target="_blank">Test Cards</a></p>

</div>
<br />
<!----------------- dropin1 fields example ---------------------->
<div style="background-color:aliceblue">
  <h2>DropIn Quick - <font color="blue">using tokenization key</font>
  </h2>

  <div id="dropin-wrapper">
    <div id="checkout-message"></div>
    <div id="dropin-container"></div>
    <button id="submit-button">Submit payment</button>

  </div>
</div>


<!----------------- dropin2 example with token ------------------>
<div style="background-color:bisque">

  <h2>DropIn With Server - <font color="blue">using token</font>
  </h2>


  <button id="generate-token" style="display:none">generate token</button>
  <div style="width:1200px"><span id="token" style="font-size:7pt;word-wrap: break-word"></span></div>
  <div><input type="checkbox" id="use-stored-card" name="use-stored-card">Use Stored Card (Create clinet token with
    customerId)<input type="text" style="width: 180px" name="customer-id" id="customer-id" value="894738055"></div>
  <div><input type="checkbox" id="force-issuer-decline" name="force-issuer-decline">Force Issuer decline (will setup the
    decline amount in server)</div>
  <form id="dropin-payment-form" action="bt/hf/payment/checkout" method="post">
    <!-- Putting the empty container you plan to pass to
      `braintree.dropin.create` inside a form will make layout and flow
      easier to manage -->
    <div id="dropin-container1"></div>
    <input type="submit" id="dropin-submit-button" value="Dropin Submit" />
    <input type="hidden" id="nonce" name="payment_method_nonce" />
  </form>

</div>

<!-- includes the Braintree JS client SDK -->

<!-- Load the PayPal JS SDK with your PayPal Client ID-->
<script
  src="https://www.paypal.com/sdk/js?client-id=AbfWHDmsApd4IM7TDiLYpsjH28utsEt-XfxVOxnE9SKbtSziPLp_LhMToOKgVKjXR7BVhDw6Pvw89ALk"></script>

<!-- dropin -->
<script src="https://js.braintreegateway.com/web/dropin/1.36.1/js/dropin.min.js"></script>
<!-- hosted fields- -->
<script src="https://js.braintreegateway.com/web/3.85.3/js/client.min.js"></script>

<script src="https://js.braintreegateway.com/web/3.85.3/js/hosted-fields.min.js"></script>

<!-- Load the PayPal Checkout component. -->
<script src="https://js.braintreegateway.com/web/3.85.3/js/paypal-checkout.min.js"></script>

<script>
  // ----------------------- 
  // dropin1 example - tokenization key (not recommended) 
  // ----------------------
  var button = document.querySelector('#submit-button');

  braintree.dropin.create({
    // Insert your tokenization key here
    authorization: 'sandbox_8h2ypqn9_8n5hz5rwnb656jks',
    container: '#dropin-container'
  }, function (createErr, instance) {
    button.addEventListener('click', function () {
      instance.requestPaymentMethod(function (requestPaymentMethodErr, payload) {
        // console.log(payload);
        // When the user clicks on the 'Submit payment' button this code will send the
        // encrypted payment information in a variable called a payment method nonce
        $.ajax({
          type: 'POST',
          url: '/bt/di/checkout',
          data: { 'paymentMethodNonce': payload.nonce, isDesiredToBeDeclined: true }
        }).done(function (result) {
          // Tear down the Drop-in UI
          instance.teardown(function (teardownErr) {
            if (teardownErr) {
              console.error('Could not tear down Drop-in UI!');
            } else {
              console.info('Drop-in UI has been torn down!');
              // Remove the 'Submit payment' button
              $('#submit-button').remove();
            }
          });

          if (result.success) {
            $('#checkout-message').html('<h1>Success</h1><p>Your Drop-in UI is working! Check your <a href="https://sandbox.braintreegateway.com/login">sandbox Control Panel</a> for your test transactions.</p><p>Refresh to try another transaction.</p><p><a href="/">Home</a></p>');
          } else {
            // console.log(result);
            $('#checkout-message').html('<h1>Error</h1><p>Check your console.</p>');
          }
        });
      });
    });
  });


  // -----------------------------------------------------------------
  // Dropin2 example
  // -----------------------------------------------------------------
  var customerInput = $("#customer-id")   // customerId with saved credit card as payment method in vault
  var customerId = customerInput.val();
  customerInput.keyup(function () {
    customerId = customerInput.val();
    console.log("key up");
    console.log(customerId);
  });
  var tokenSpan = document.querySelector('#token')
  var token = undefined;
  var button1 = document.querySelector('#generate-token');
  var payButton = document.querySelector('#pay');
  var generateClientTokenUrl = '/bt/hf/payment/client_token';
  $("#pay").hide();
  $("#dropin-submit-button").hide();

  button1.addEventListener('click', function () {
    $.ajax({
      type: 'GET',
      url: generateClientTokenUrl
    }).done(function (result) {
      // console.log(result);
      token = result;
      tokenSpan.innerHTML = `<p>${token}</p>`;

      const form = document.getElementById('dropin-payment-form');

      braintree.dropin.create({
        authorization: token,
        container: '#dropin-container1'
      }, (error, dropinInstance) => {
        if (error) { console.error(error); }

        $("#dropin-submit-button").show();
        form.addEventListener('submit', event => {
          event.preventDefault();

          dropinInstance.requestPaymentMethod((error, payload) => {
            if (error) { console.error(error); }
            // console.log(payload);

            // Step four: when the user is ready to complete their
            //   transaction, use the dropinInstance to get a payment
            //   method nonce for the user's selected payment method, then add
            //   it a the hidden field before submitting the complete form to
            //   a server-side integration
            document.getElementById('nonce').value = payload.nonce;
            alert(payload.nonce);
            form.submit();
          });
        });
      });

      // use the access token for the hosted fields demo
      createHostedFieldBraintreeInstance(token);

    });

  });
  // to generate access token
  button1.click();

  var checkBoxUseStoredCard = $("#use-stored-card");
  checkBoxUseStoredCard.change(function (event) {
    console.log("checkboxChanged");
    var generateClientTokenWithCustomerId = checkBoxUseStoredCard[0].checked;
    if (generateClientTokenWithCustomerId) {
      generateClientTokenUrl = `/bt/vault/payment/client_token/${customerId}`
      $('#dropin-container1').empty();

    }
    button1.click();

  });

  // -----------------------------------------------------------------
  // Hosted fields example
  // -----------------------------------------------------------------

  function createHostedFieldBraintreeInstance(token) {

    var form = document.querySelector('#my-sample-form');
    // var submit = document.querySelector('input[type="submit"]');
    var submit = document.querySelector('#pay');

    braintree.client.create({
      authorization: token
    }, function (clientErr, clientInstance) {
      if (clientErr) {
        console.error(clientErr);
        return;
      }

      // This example shows Hosted Fields, but you can also use this
      // client instance to create additional components here, such as
      // PayPal or Data Collector.

      braintree.hostedFields.create({
        client: clientInstance,
        styles: {
          'input': {
            'font-size': '14px',
          },
          'input.invalid': {
            'color': 'red'
          },
          'input.valid': {
            'color': 'green'
          }
        },
        fields: {
          number: {
            container: '#card-number',
            placeholder: '4111 1111 1111 1111'
            
          },
          cvv: {
            container: '#cvv',
            placeholder: 'visa: 123, Amex: 1234'
          },
          expirationDate: {
            container: '#expiration-date',
            placeholder: '10/2022'
          }
        }
      }, function (hostedFieldsErr, hostedFieldsInstance) {
        if (hostedFieldsErr) {
          console.error(hostedFieldsErr);
          return;
        }

        // Include this to verify BIN while user typing it

        hostedFieldsInstance.on('binAvailable', function (event) {
          console.log("Event Fired: binAvailable ", event.bin) // send bin to 3rd party bin service
        });

        submit.removeAttribute('disabled');
        $("#pay").show();

        form.addEventListener('submit', function (event) {
          event.preventDefault();

          hostedFieldsInstance.tokenize(function (tokenizeErr, payload) {
            if (tokenizeErr) {
              console.error(tokenizeErr);
              return;
            }

            // If this was a real integration, this is where you would
            // send the nonce to your server.
            alert('Got a nonce: ' + payload.nonce);
            debugger;
            console.log(payload);
            document.getElementById('hf-nonce').value = payload.nonce;
            document.getElementById('hf_save_for_next_purchase').value = $("#save-for-next-purchase")[0].checked;
            document.getElementById('isDesiredToBeDeclined').value = $("#force-issuer-decline")[0].checked;
            document.getElementById('verify_cc').value = $("#verify-cc")[0].checked;
            form.submit();

          });
        }, false);
      });
    });

  }






</script>