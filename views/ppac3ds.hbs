<html>

<head>

  <meta charset="utf-8" />

  <!-- Optimal rendering on mobile devices. -->
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Sample CSS styles for demo purposes. You can override these styles to match your web page's branding. -->
  <link rel="stylesheet" type="text/css"
    href="https://www.paypalobjects.com/webstatic/en_US/developer/docs/css/cardfields.css" />

</head>

<body>

  <div class="loading" id="loading-button">Loading paypal button...</div>
  <!-- JavaScript SDK -->
  <script
    src="https://www.paypal.com/sdk/js?components=hosted-fields&client-id=AY30GJsxw_QS7g7HaAeCW58FcbcSHVL82ixgep50NtkTBgSYqVqTpMD_5VO01ILjH2AdFUAuFm-aJ0CC"
    data-client-token="eyJicmFpbnRyZWUiOnsiYXV0aG9yaXphdGlvbkZpbmdlcnByaW50IjoiNDFlNWY1Y2JlNDkxNjA5YjMyMTk3MGI2Nzg0NzljMzFiMmY5MzRmM2UwOTBiZWRiOWNkNTY2M2MzZWEwNWJjNnxtZXJjaGFudF9pZD1yd3dua3FnMnhnNTZobTJuJnB1YmxpY19rZXk9NjNrdm4zN3Z0MjlxYjRkZiZjcmVhdGVkX2F0PTIwMjItMDgtMDhUMTA6MDY6MTEuNzIwWiIsInZlcnNpb24iOiIzLXBheXBhbCJ9LCJwYXlwYWwiOnsiaWRUb2tlbiI6ImV5SnJhV1FpT2lKbE5EQTJOakE0WWpVMFlUazBORGd4WWprMVl6YzFOREkwT0dOak1USXpaaUlzSW5SNWNDSTZJa3BYVkNJc0ltRnNaeUk2SWxKVE1qVTJJbjAuZXlKcGMzTWlPaUpvZEhSd2N6b3ZMMkZ3YVM1ellXNWtZbTk0TG5CaGVYQmhiQzVqYjIwaUxDSmhkRjlvWVhOb0lqb2lhVWRMYzI1NVNERjJiMU15TmtobFN6aEhkRVpXWnlJc0luSnZiR1VpT2lKTlJWSkRTRUZPVkNJc0luTmxjM05wYjI1ZmFXNWtaWGdpT2lKdVVuQktjR1pzVkZaelF6aFBNRGswYm1weGJISm5iWFpsU2tNaUxDSmpiR2xsYm5SZmFXUWlPaUpCV1RNd1IwcHplSGRmVVZNM1p6ZElZVUZsUTFjMU9FWmpZbU5UU0ZaTU9ESnBlR2RsY0RVd1RuUnJWRUpuVTFseFZuRlVjRTFFWHpWV1R6QXhTVXhxU0RKQlpFWlZRWFZHYlMxaFNqQkRReUlzSW1GamNpSTZXeUpqYkdsbGJuUWlYU3dpWVhWa0lqb2lRVmt6TUVkS2MzaDNYMUZUTjJjM1NHRkJaVU5YTlRoR1kySmpVMGhXVERneWFYaG5aWEExTUU1MGExUkNaMU5aY1ZaeFZIQk5SRjgxVms4d01VbE1ha2d5UVdSR1ZVRjFSbTB0WVVvd1EwTWlMQ0poZFhSb1gzUnBiV1VpT2pFMk5UazVOVE14TnpFc0ltRjZJam9pWjJOd0xuTnNZeUlzSW5OamIzQmxjeUk2V3lKQ2NtRnBiblJ5WldVNlZtRjFiSFFpWFN3aVpYaHdJam94TmpVNU9UVTBNRGN5TENKcFlYUWlPakUyTlRrNU5UTXhOeklzSW1wMGFTSTZJbFV5UVVGTGVHRlhUM1oyUjJwVFZVdFVRWEY1U0dsTmFGSnpjeTB4WDJKRmExTjRMVVExWTJkblMxWk1PRTUyZDJnelpWWTJVM0Z2YVUwMWJYbEJTMmhVVVU5T2MwWnJObFJuZFdodmNXODRTbnB0WlZGUFVsRlpRekJIZVc1dk5WSk9kR2RYU2xKTlkwUk9lRGt6V25oT2NtZERhVEJ1Wm10VFprcFhjSGhCSW4wLlZyT2o3NXBONmlFMUxhLXhjaDBVdTVPVm90MzVfWmZDMnl6YWJrSzFmM2RWSnB2NEh2UmgwM2RfUW4xc1ZjUGxEOG9MM2JkMnJFb1VlUDNjdVBzVmtYYWJJdHdZLTZQdV9PdnZ1ZkRxNEhQbi03WmROZFotNWJhUGc4c0NPczQ5TmJ6Wm1TVGdha2FONWZ1OTZ0WmFvYVQ2Wi1LOVdrTEphczVqSjBKNUdYTjZMSXQ3QVMwanlwNTZqaWxUamZUakZUaGtfZmUtcEtBOGYydWljMkhDckZjaUFJakRFNjBjU1JYdWtTQmR3a0dqQzNpSmVOVXA0OHBaU2E3V3FSdk9ER1NKdTZiNDFnNnVsaXVheV9lMlR4OGRpWkZEdGRVN0RLWWlzemhKMWRkWmNXQjRxQWxWNHl0TExiOXIza2FWODNkdGhQMWgwZFJCd1hfRElJd3IxdyIsImFjY2Vzc1Rva2VuIjoiQTIxQUFKMWlhX2J2bDItUWR5dVlPTnpNSkZpclZ3X2ctamtLZkZxLTFIbzlTQlZNYnU1bVZXbnRKS05MNG9oaXJsRFc0eS1uOXdjdlg5MzFzazMtbUh4REhndTNsRFgtZyJ9fQ=="></script>

  <div><a href="/">Home</a></div>
  <h1>{{title}}</h1>
  <p class="note">Need to manually generate data-client-token by calling <br />
    <span style="color:black">http://localhost:3000/ppapi/auth/accesstoken/generate</span>
    <br />
    get token_id from response and add to header of: <br />
    <span style="color:black">http://localhost:3000/ppapi/auth/clienttoken/generate</span>
    <br />
    take client_token from response and add as attribute to script tag which loads PP SDK
  </p>
  <div id="payment-view">
    <!-- Advanced credit and debit card payments form -->
    <div class="card_container" id="card-fields" style="margin-left:0px;padding:10px;margin-top:0px">
      <form id="card-form">

        <label for="card-number">Card Number</label>
        <div id="card-number" class="card_field"></div>
        <div>
          <label for="expiration-date">Expiration Date </label>
          <div id="expiration-date" class="card_field"></div>
        </div>
        <div>
          <label for="cvv">CVV</label>
          <div id="cvv" class="card_field"></div>
        </div>
        <div style="display:none;">
          {{!-- <label for="card-holder-name">Name on Card</label>
          <input type="text" id="card-holder-name" name="card-holder-name" autocomplete="off"
            placeholder="card holder name" />
          <div>
            <label for="card-billing-address-street">Billing Address</label>
            <input type="text" id="card-billing-address-street" name="card-billing-address-street" autocomplete="off"
              placeholder="street address" />
          </div>
          <div>
            <label for="card-billing-address-unit">&nbsp;</label>
            <input type="text" id="card-billing-address-unit" name="card-billing-address-unit" autocomplete="off"
              placeholder="unit" />
          </div>
          <div>
            <input type="text" id="card-billing-address-city" name="card-billing-address-city" autocomplete="off"
              placeholder="city" />
          </div>
          <div>
            <input type="text" id="card-billing-address-state" name="card-billing-address-state" autocomplete="off"
              placeholder="state" />
          </div>
          <div>
            <input type="text" id="card-billing-address-zip" name="card-billing-address-zip" autocomplete="off"
              placeholder="zip / postal code" />
          </div> --}}


          {{!-- <div>
            <label for="card-billing-address-country">Country Code</label>
            <input type="text" id="card-billing-address-country" name="card-billing-address-country" autocomplete="off"
              placeholder="country code e.g. US or GB" value="US" />
          </div> --}}
        </div>
        <br /><br />
        <button value="submit" id="submit" class="btn">Pay</button>
      </form>
    </div>



  </div>
  <div>
    <span id="payment-result">&nbsp; </span>
    <span colspan="2" id="payment-result-cc">&nbsp;</span>

  </div>




  <!-- Implementation -->
  <script>
    $("#loading-button").show();
    let orderId;

    // If this returns false or the card fields aren't visible, see Step #1.
    if (paypal.HostedFields.isEligible()) {

      // Renders card fields
      paypal.HostedFields.render({
        // Call your server to return an order ID from your server
        createOrder: function () {
          return fetch('/ppapi/order', {
            method: 'post'
          }).then(function (res) {
            return res.json();
          }).then(function (orderData) {
            orderId = orderData.id;
            return orderId;
          });
        },

        styles: {
          '.valid': {
            'color': 'green'
          },
          '.invalid': {
            'color': 'red'
          }
        },

        fields: {
          number: {
            selector: "#card-number",
            placeholder: "card number"
          },
          cvv: {
            selector: "#cvv",
            placeholder: "123"
          },
          expirationDate: {
            selector: "#expiration-date",
            placeholder: "MM/YY"
          }
        }
      }).then(function (cardFields) {
        $("#loading-button").hide();
        document.querySelector("#card-form").addEventListener('submit', (event) => {
          event.preventDefault();

          cardFields.submit({
            // Trigger 3D Secure authentication
            contingencies: ['SCA_WHEN_REQUIRED']

            // Cardholder's first and last name
            //cardholderName: document.getElementById('card-holder-name').value,
            // Billing Address
            //billingAddress: {
              // Street address, line 1
             // streetAddress: document.getElementById('card-billing-address-street').value,
              // Street address, line 2 (Ex: Unit, Apartment, etc.)
             // extendedAddress: document.getElementById('card-billing-address-unit').value,
              // State
             // region: document.getElementById('card-billing-address-state').value,
              // City
             // locality: document.getElementById('card-billing-address-city').value,
              // Postal Code
              //postalCode: document.getElementById('card-billing-address-zip').value,
              // Country Code
              // countryCodeAlpha2: document.getElementById('card-billing-address-country').value
            //}
          }).then(function (payload) {

            /** sample payload
                * {
                * "orderId": "0BS14434UR665304G",
                * "liabilityShift":  Possible,
                * }
                */

            // Needed only when 3D Secure contingency applied
            
            console.log(payload);
            if (payload.liabilityShift === "POSSIBLE") {
              // 3D Secure passed successfully
              console.log("// 3D Secure passed successfully", payload.liabilityShift);
              
            }

            if (payload.liabilityShift) {
              // Handle buyer confirmed 3D Secure successfully
              console.log("// Handle buyer confirmed 3D Secure successfully", payload.liabilityShift);
              captureOrder();
            }


          }).catch(function (err) {
            alert('Payment could not be captured! ' + JSON.stringify(err))
          });
        });
      });
    } else {
      // Hides card fields if the merchant isn't eligible
      document.querySelector("#card-form").style = 'display: none';
    }

    captureOrder = function () {
      console.log("orderId", orderId);
      fetch('/ppapi/order/' + orderId + '/capture/', {
        method: 'post'
      }).then(function (res) {
        return res.json();
      }).then(function (orderData) {
        // Three cases to handle:
        //   (1) Recoverable INSTRUMENT_DECLINED -> call actions.restart()
        //   (2) Other non-recoverable errors -> Show a failure message
        //   (3) Successful transaction -> Show confirmation or thank you

        // This example reads a v2/checkout/orders capture response, propagated from the server
        // You could use a different API or structure for your 'orderData'
        var errorDetail = Array.isArray(orderData.details) && orderData.details[0];

        if (errorDetail && errorDetail.issue === 'INSTRUMENT_DECLINED') {
          return actions.restart(); // Recoverable state, per:
          // https://developer.paypal.com/docs/checkout/integration-features/funding-failure/
        }

        if (errorDetail) {
          var msg = 'Sorry, your transaction could not be processed.';
          if (errorDetail.description) msg += '\n\n' + errorDetail.description;
          if (orderData.debug_id) msg += ' (' + orderData.debug_id + ')';
          return alert(msg); // Show a failure message
        }

        // Show a success message or redirect
        alert('Transaction completed!');
        // $("#payment-result-cc").text(`Payment success: \n ${JSON.stringify(orderData)}`);
        $("#payment-result-cc").jsonViewer(orderData);
      }).catch(function (err) {
        alert('Payment could not be captured! ' + JSON.stringify(err));
        console.log(err);
      });
    } 
  </script>

</body>

</html>