<div><a href="/">Home</a></div>
<h1>{{title}}</h1>
<div>Amount: <input type="text" id="input-amount" style="width:100px" value="77"></div>
<div class="loading" id="loading-button">Loading paypal button...</div>

<ol>

  <li>Click first to confirm the order (Also create PP Order)
    <div>
      <button name="confirm-order" id="confirm-order">Confirm Order </button>
    </div>
    <div id="create-order-response"></div>

  </li>
  <li>Click to start PP InContext Flow
    <div id="paypal-button-container"></div>
  </li>
  
  <div id="paypal-result-container"></div>

</ol>




{{!-- PP Rest API simple --}}
{{!-- client-id=Abf.. #App: MerchantAppUS | Account: eran.m.us@merchant.com (BusinessPro) --}}
<script
  src="https://www.paypal.com/sdk/js?client-id=AbfWHDmsApd4IM7TDiLYpsjH28utsEt-XfxVOxnE9SKbtSziPLp_LhMToOKgVKjXR7BVhDw6Pvw89ALk&components=buttons&disable-funding=giropay,sepa,sofort,card">
  </script>



<script>
  var amountElement = $("#input-amount");
  var amount = amountElement.val();
  var orderId ='';
  amountElement.change(function () {
    amount = amountElement.val();
    console.log("amount: ", amount);
  });

  $("#loading-button").show();
  

  /*****************For the manual crate order***********/
  var orderData = {
      intent: "CAPTURE", purchase_units: [
        {
          reference_id: uuidv4(),
          amount: { currency_code: "USD", value: amount }
        }]
    };

  
  var confirmButton = document.querySelector('#confirm-order');
  confirmButton.addEventListener('click', function () {
    console.log("CONFIRM ORDER");
    createOrder();
      
  });


  paypal.Buttons({
    
    createOrder: function (data, actions) {
      // dont create order. just return orderId
      console.log("ORDERID: ", data);
      console.log("ORDERID: ", orderId);
      return orderId;
    },

    // Finalize the transaction after payer approval
    onApprove: function (data, actions) {
      return actions.order.capture().then(function (orderData) {
        // Successful capture! For dev/demo purposes:
        let resultJson = JSON.stringify(orderData, null, 2);
        console.log('Capture result', orderData, resultJson);
        var transaction = orderData.purchase_units[0].payments.captures[0];
        alert('Transaction ' + transaction.status + ': ' + transaction.id + '\n\nSee console for all available details');
        $('#paypal-result-container').text(resultJson);
        // When ready to go live, remove the alert and show a success message within this page. For example:
        // var element = document.getElementById('paypal-button-container');
        // element.innerHTML = '';
        // element.innerHTML = '<h3>Thank you for your payment!</h3>';
        // Or go to another URL:  actions.redirect('thank_you.html');
      }).catch(function (err) {
        console.log(err);
        $('#paypal-result-container').text(err);
      });
    }
  }).render('#paypal-button-container').then(function () {
    $("#loading-button").hide();
  });
  
  function createOrder() {
    
    $.ajax('/ppapi/order', {
      type: 'POST',
      headers: {
        "Content-Type": "application/json",

      },
      data: JSON.stringify(orderData),
      success: function (createOrderResData, status, xhr) {
        console.log(createOrderResData);
        $("#create-order-response").html(JSON.stringify(createOrderResData));
       
        orderId = createOrderResData.id;
        console.log("orderId: ", orderId);

      },
      error: function (jqXhr, textStatus, errorMessage) {
        console.log(errorMessage);
      }
    });

  }

  function uuidv4() {
    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>
      (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
    );
  }


</script>