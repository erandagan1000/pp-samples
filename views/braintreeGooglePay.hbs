<div><a href="/">Home</a></div>
<h1>{{title}}</h1>
<hr>
<!---------------- Google Pay Button ------------------>
<div>
  <div id="google-pay-button"><button>Google Pay</button>&nbsp;
  </div>
  <br>
  <div style="color:blue;font-size:12pt;margin-top:10px">
    <input type="checkbox" id="save_for_next_purchase" name="save_for_next_purchase">Save for future payments
  </div>

  <div id="support-apple-pay">&nbsp;</div>

</div>


<div>

  <div class="loading" id="loading-token">Generating access token...</div>
  <div style="inline-size: 1350px;overflow-wrap: break-word; ">
    <p>Access token: </p>
    <div id="token" style="font-size: 6pt;"></div>
  </div>


  <div class="loading" id="loading-button">Loading button...</div>

</div>
<!-------------------- results -------------------->
<div style="inline-size: 1350px;overflow-wrap: break-word; ">
  <p>onpaymentauthorized payload: </p>
  <div id="payment-authorized-payload">&nbsp;</div>
</div>

<div style="inline-size: 1350px;overflow-wrap: break-word; ">
  <p>BT Tokenize message: </p>
  <div id="bt-tokenize-message">&nbsp;</div>
</div>

<!-------------------- log -------------------->
<div id="log">&nbsp;</div>

<div style="inline-size: 1350px;overflow-wrap: break-word; ">
  <p>Checkout Server result: </p>
  <div id="checkout-result">&nbsp;</div>
</div>

<!-- includes the Braintree JS client SDK -->
<script src="https://pay.google.com/gp/p/js/pay.js"></script>
<script src="https://js.braintreegateway.com/web/3.88.1/js/client.min.js"></script>
<script src="https://js.braintreegateway.com/web/3.88.1/js/google-payment.min.js"></script>
<script>

  var selectedCurrency = 'USD'   // e.g. EUR or USD
  var amount = '25.22';
  var tokenSpan = document.querySelector('#token')
  var token = undefined;
  var logElem = $("#log");
  var savePaymentMethodElem = $("#save_for_next_purchase")[0];
  var isSavePaymentMethodChecked = savePaymentMethodElem.checked;

  savePaymentMethodElem.addEventListener("click", function () {
    isSavePaymentMethodChecked = savePaymentMethodElem.checked;
    // alert(isSavePaymentMethodChecked);

  });

  $("#google-pay-button").hide();

  (function () {
    $.ajax({
      type: 'GET',
      url: '/bt/vault/payment/client_token'
    }).done(function (result) {
      // console.log(result);
      token = result;
      tokenSpan.innerHTML = `${token}`;
      $("#loading-token").hide();

      initGooglePayCheckout(token);
    });
  }());

  // -----------------------------------------------------------------

  // paypal checkout
  function initGooglePayCheckout(token) {
    $("#loading-button").show();

    // Make sure to have https://pay.google.com/gp/p/js/pay.js loaded on your page

    // You will need a button element on your page styled according to Google's brand guidelines
    // https://developers.google.com/pay/api/web/guides/brand-guidelines
    var button = document.querySelector('#google-pay-button');
    var paymentsClient = new google.payments.api.PaymentsClient({
      environment: 'TEST' // Or 'PRODUCTION'
    });

    braintree.client.create({
      authorization: token
    }).then(function (clientInstance) {
      return braintree.googlePayment.create({
        client: clientInstance,
        googlePayVersion: 2,
        // googleMerchantId: 'merchant-id-from-google' // Optional in sandbox; if set in sandbox, this value must be a valid production Google Merchant ID
      });
    }).then(function (googlePaymentInstance) {
      return paymentsClient.isReadyToPay({
        // see https://developers.google.com/pay/api/web/reference/object#IsReadyToPayRequest
        apiVersion: 2,
        apiVersionMinor: 0,
        allowedPaymentMethods: googlePaymentInstance.createPaymentDataRequest().allowedPaymentMethods,
        existingPaymentMethodRequired: true // Optional
      }).then(function (response) {
        if (response.result) {
          button.addEventListener('click', function (event) {
            event.preventDefault();

            var paymentDataRequest = googlePaymentInstance.createPaymentDataRequest({
              transactionInfo: {
                currencyCode: 'USD',
                totalPriceStatus: 'FINAL',
                totalPrice: '100.00' // Your amount
              }
            });

            // We recommend collecting billing address information, at minimum
            // billing postal code, and passing that billing postal code with all
            // Google Pay card transactions as a best practice.
            // See all available options at https://developers.google.com/pay/api/web/reference/object
            var cardPaymentMethod = paymentDataRequest.allowedPaymentMethods[0];
            cardPaymentMethod.parameters.billingAddressRequired = true;
            cardPaymentMethod.parameters.billingAddressParameters = {
              format: 'FULL',
              phoneNumberRequired: true
            };

            paymentsClient.loadPaymentData(paymentDataRequest).then(function (paymentData) {
              return googlePaymentInstance.parseResponse(paymentData);
            }).then(function (result) {
              // Send result.nonce to your server
              // result.type may be either "AndroidPayCard" or "PayPalAccount", and
              // paymentData will contain the billingAddress for card payments

              // print callback payload.
              var msg1 = `nonce: ${result.nonce}`;
              logElem.append(`<div>${msg1}</div>`);
              msg1 =`Payment Type: ${result.type}-${result.description}`;
              logElem.append(`<div>${msg1}</div>`);
           
              // $("#bt-tokenize-message").text(msg1);

              msg1 = "SAVE TO VAULT: " + isSavePaymentMethodChecked;
              logElem.append(`<div>${msg1}</div>`);

              // Send payload.nonce to your server.
              $.ajax({
                type: 'POST',
                url: '/bt/vault/payment/checkout',
                data: {
                  'paymentMethodNonce': result.nonce,
                  'amount': amount,
                  'currency': selectedCurrency,
                  'hf_save_for_next_purchase': isSavePaymentMethodChecked   //to store payment method in vault

                }
              }).done(function (result) {

                if (result.success) {

                  $('#checkout-message').html('<h1>Success</h1><p><a href="/">Home</a></p>');

                  var serverResultDiv = document.querySelector('#checkout-result');
                  $("#checkout-result").jsonViewer(result);


                } else {
                  logElem.append(`<div>Result Error: ${result}</div>`);
                  $('#checkout-message').html('<h1>Error</h1><p>Check your console.</p>');
                  $("#checkout-result").jsonViewer(result);
                }
                
              }).catch(function (tokenizeErr) {
                var errMsg = `'Error tokenizing Apple Pay' ${tokenizeErr}`;
                $("#bt-tokenize-message").text(errMsg);
                console.error(errMsg);
                session.completePayment(ApplePaySession.STATUS_FAILURE);
              });


            }).catch(function (err) {
              // Handle errors
              console.log("parseResponse Error:", err);
            });
          });
        }
      });
    }).catch(function (err) {
      // Handle creation errors
      console.log("braintree.googlePayment", err);
    });



    $("#google-pay-button").show();
    $("#loading-button").hide();

  }

</script>