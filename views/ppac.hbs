<html>

<head>

  <meta charset="utf-8" />

  <!-- Optimal rendering on mobile devices. -->
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Sample CSS styles for demo purposes. You can override these styles to match your web page's branding. -->
  <link rel="stylesheet" type="text/css"
    href="https://www.paypalobjects.com/webstatic/en_US/developer/docs/css/cardfields.css" />

</head>

<body>
  
  <div class="loading" id="loading-button">Loading paypal button...</div>
  <!-- JavaScript SDK -->
  <script
    src="https://www.paypal.com/sdk/js?components=buttons,hosted-fields&client-id=AY30GJsxw_QS7g7HaAeCW58FcbcSHVL82ixgep50NtkTBgSYqVqTpMD_5VO01ILjH2AdFUAuFm-aJ0CC"
    data-client-token="eyJicmFpbnRyZWUiOnsiYXV0aG9yaXphdGlvbkZpbmdlcnByaW50IjoiMTg4MjY3ZmE1NDM2ODdkNTE1YjgyMTI4OTY4MmRiOTE5ZGRmNDNkYzk1YzUwMWNmZjMwNmEzODVhYzk0MzA2OXxtZXJjaGFudF9pZD1yd3dua3FnMnhnNTZobTJuJnB1YmxpY19rZXk9NjNrdm4zN3Z0MjlxYjRkZiZjcmVhdGVkX2F0PTIwMjItMDMtMjhUMTE6MjE6MTMuMzY5WiIsInZlcnNpb24iOiIzLXBheXBhbCJ9LCJwYXlwYWwiOnsiaWRUb2tlbiI6ImV5SnJhV1FpT2lKbE5EQTJOakE0WWpVMFlUazBORGd4WWprMVl6YzFOREkwT0dOak1USXpaaUlzSW5SNWNDSTZJa3BYVkNJc0ltRnNaeUk2SWxKVE1qVTJJbjAuZXlKcGMzTWlPaUpvZEhSd2N6b3ZMMkZ3YVM1ellXNWtZbTk0TG5CaGVYQmhiQzVqYjIwaUxDSmhkRjlvWVhOb0lqb2llV05tV1ZkQ1ozSlVla2RmY1RkVGNIbDNZV1p1UVNJc0luSnZiR1VpT2lKTlJWSkRTRUZPVkNJc0luTmxjM05wYjI1ZmFXNWtaWGdpT2lKUE9VUkVhbXhPVEZSR1VqbHdlVUowWnpObmFISXdia2xTYTNraUxDSmpiR2xsYm5SZmFXUWlPaUpCV1RNd1IwcHplSGRmVVZNM1p6ZElZVUZsUTFjMU9FWmpZbU5UU0ZaTU9ESnBlR2RsY0RVd1RuUnJWRUpuVTFseFZuRlVjRTFFWHpWV1R6QXhTVXhxU0RKQlpFWlZRWFZHYlMxaFNqQkRReUlzSW1GamNpSTZXeUpqYkdsbGJuUWlYU3dpWVhWa0lqb2lRVmt6TUVkS2MzaDNYMUZUTjJjM1NHRkJaVU5YTlRoR1kySmpVMGhXVERneWFYaG5aWEExTUU1MGExUkNaMU5aY1ZaeFZIQk5SRjgxVms4d01VbE1ha2d5UVdSR1ZVRjFSbTB0WVVvd1EwTWlMQ0poZFhSb1gzUnBiV1VpT2pFMk5EZzBOalkwTnpNc0ltRjZJam9pWjJOd0xuTnNZeUlzSW5OamIzQmxjeUk2V3lKQ2NtRnBiblJ5WldVNlZtRjFiSFFpWFN3aVpYaHdJam94TmpRNE5EWTNNemN6TENKcFlYUWlPakUyTkRnME5qWTBOek1zSW1wMGFTSTZJbFV5UVVGSlVIRkZaSFJ0YjFKS1pqSlFlbTVVV1dWTlYyWkdTVTVYYWxwaVQxbE9ibXgyU21ad1VFUlBjR1paTlRSeFNsRk9ORjlXYlZSMFdEaDNUMUZ0ZDJKeVNWRmFiMHhrWlU1YWRYRnJXVVJNVERKV1EwaGFTVmd3Y1VGd04waHRTbG8zVGpFNGVWUjRhRmhUVFROS01VaFRWbGMxUldkcVlVUm5iakJCSW4wLkxRZFgzSkVuUndmZHluX2UweDdFVFFoM2tOSEtXekM0cE5kNUZRU1JkWGNHM2VmRkN6TnQyUWllY29VUEswVzRZVFBBTGI5dWhqMHdKWE95UEptTmxOUzdkdi0zaG9zeE9SeUlsZ3JscDgxMUkwbnpOb2x6TGY2SDdYbXlsMU5TbDhaYWxYV0VCd3NiUGtqVnZQZVJ2ZnBtVnZqMkh0eVNfX2RmOTB4Q0NCelVfY2FxaXEzbkV0NDVaMklyZUZHSHlVNm9oMXlRMEktSThrLWlORkEtaXJ3LVlqWVVwc1RkeHNhMVFBVGtuNWo4VmJnamFJdnVzS2pSeUlKbmVZUE43WFZtUU92ZmhHRjA5ZWx2UnBjWF8yQXd3aFVDbTRRT3d3aXNMVWtnNWhGZjB5Y2dHQ3NJV09Vb3Ntc1dGRU9TSW8wZU83bUJvN1Fub1hkOUpFRm8wdyIsImFjY2Vzc1Rva2VuIjoiQTIxQUFMSFNqWXhvVjFhVlRlczl4aEdCTjlmb0N6T0Z2TTFTVkl5Mm9QY2x2ZTZkQ1IwQjFiODRIV0dLeElNajFTZjAwTUdPeE5HbmN1a3U5OFdfN0pkTzB5R2VMMjcyQSJ9fQ=="></script>

  <div><a href="/">Home</a></div>
  <h1>{{title}}</h1>
  <p class="note">Need to manually generate data-client-token by calling <br/>
  <span style="color:black">http://localhost:3000/ppapi/auth/accesstoken/generate</span>
  <br/>
  get token_id from response and add to header of: <br/>
  <span style="color:black">http://localhost:3000/ppapi/auth/clienttoken/generate</span>
  <br/>
  take client_token from response and add as attribute to script tag which loads PP SDK 
  </p>
  <div id="payment-view">
    <!-- Buttons container -->
    <div style="padding:10px">
      <table border="0" align="left" valign="top" bgcolor="#FFFFFF" style="width: 39%">
        <tr>
          <td colspan="2">
            <div id="paypal-button-container"></div>
          </td>
        </tr>
        <tr>
          <td colspan="2">&nbsp;</td>
        </tr>
        
      </table>
    </div>

    <div align="left" style="padding:10px;margin-top:120px;font-size:17pt;font-weight:700"> or </div>

    <!-- Advanced credit and debit card payments form -->
    <div class="card_container" id="card-fields" style="margin-left:0px;padding:10px;margin-top:0px">
      <form id="card-form">

        <label for="card-number">Card Number</label>
        <div id="card-number" class="card_field"></div>
        <div>
          <label for="expiration-date">Expiration Date </label>
          <div id="expiration-date" class="card_field"></div>
        </div>
        <div>
          <label for="cvv">CVV</label>
          <div id="cvv" class="card_field"></div>
        </div>
        <label for="card-holder-name">Name on Card</label>
        <input type="text" id="card-holder-name" name="card-holder-name" autocomplete="off"
          placeholder="card holder name" />
        <div>
          <label for="card-billing-address-street">Billing Address</label>
          <input type="text" id="card-billing-address-street" name="card-billing-address-street" autocomplete="off"
            placeholder="street address" />
        </div>
        <div>
          <label for="card-billing-address-unit">&nbsp;</label>
          <input type="text" id="card-billing-address-unit" name="card-billing-address-unit" autocomplete="off"
            placeholder="unit" />
        </div>
        <div>
          <input type="text" id="card-billing-address-city" name="card-billing-address-city" autocomplete="off"
            placeholder="city" />
        </div>
        <div>
          <input type="text" id="card-billing-address-state" name="card-billing-address-state" autocomplete="off"
            placeholder="state" />
        </div>
        <div>
          <input type="text" id="card-billing-address-zip" name="card-billing-address-zip" autocomplete="off"
            placeholder="zip / postal code" />
        </div>
        <div>
          <input type="text" id="card-billing-address-country" name="card-billing-address-country" autocomplete="off"
            placeholder="country code e.g. US" />
        </div>
        <br /><br />
        <button value="submit" id="submit" class="btn">Pay</button>
      </form>
    </div>

   
  </div>
   <div>
      <span id="payment-result">&nbsp; </span>
      <span colspan="2" id="payment-result-cc">&nbsp;</span>
      
    </div>




  <!-- Implementation -->
  <script>
    $("#loading-button").show();
    let orderId;

    // Displays PayPal buttons
    paypal.Buttons({
      style: {
        layout: 'horizontal'
      },
      createOrder: function (data, actions) {
        return actions.order.create({
          purchase_units: [{
            amount: {
              value: "1.00"
            }
          }]
        });
      },
      onApprove: function (data, actions) {
        return actions.order.capture().then(function (details) {
          // window.location.href = '/success.html';
          // $("#payment-result").text(`Payment success: \n ${JSON.stringify(details)}`);
          $("#payment-result").jsonViewer(details);
          document.querySelector("#payment-view").style = 'display: none';

        });
      }
    }).render("#paypal-button-container").then(() => $("#loading-button").hide());

    // If this returns false or the card fields aren't visible, see Step #1.
    if (paypal.HostedFields.isEligible()) {

      // Renders card fields
      paypal.HostedFields.render({
        // Call your server to set up the transaction
        createOrder: function () {
          return fetch('/ppapi/order', {
            method: 'post'
          }).then(function (res) {
            return res.json();
          }).then(function (orderData) {
            orderId = orderData.id;
            return orderId;
          });
        },

        styles: {
          '.valid': {
            'color': 'green'
          },
          '.invalid': {
            'color': 'red'
          }
        },

        fields: {
          number: {
            selector: "#card-number",
            placeholder: "card number"
          },
          cvv: {
            selector: "#cvv",
            placeholder: "123"
          },
          expirationDate: {
            selector: "#expiration-date",
            placeholder: "MM/YY"
          }
        }
      }).then(function (cardFields) {
        $("#loading-button").hide();
        document.querySelector("#card-form").addEventListener('submit', (event) => {
          event.preventDefault();

          cardFields.submit({
            // Cardholder's first and last name
            cardholderName: document.getElementById('card-holder-name').value,
            // Billing Address
            billingAddress: {
              // Street address, line 1
              streetAddress: document.getElementById('card-billing-address-street').value,
              // Street address, line 2 (Ex: Unit, Apartment, etc.)
              extendedAddress: document.getElementById('card-billing-address-unit').value,
              // State
              region: document.getElementById('card-billing-address-state').value,
              // City
              locality: document.getElementById('card-billing-address-city').value,
              // Postal Code
              postalCode: document.getElementById('card-billing-address-zip').value,
              // Country Code
              countryCodeAlpha2: document.getElementById('card-billing-address-country').value
            }
          }).then(function () {
            fetch('/ppapi/order/' + orderId + '/capture/', {
              method: 'post'
            }).then(function (res) {
              return res.json();
            }).then(function (orderData) {
              // Three cases to handle:
              //   (1) Recoverable INSTRUMENT_DECLINED -> call actions.restart()
              //   (2) Other non-recoverable errors -> Show a failure message
              //   (3) Successful transaction -> Show confirmation or thank you

              // This example reads a v2/checkout/orders capture response, propagated from the server
              // You could use a different API or structure for your 'orderData'
              var errorDetail = Array.isArray(orderData.details) && orderData.details[0];

              if (errorDetail && errorDetail.issue === 'INSTRUMENT_DECLINED') {
                return actions.restart(); // Recoverable state, per:
                // https://developer.paypal.com/docs/checkout/integration-features/funding-failure/
              }

              if (errorDetail) {
                var msg = 'Sorry, your transaction could not be processed.';
                if (errorDetail.description) msg += '\n\n' + errorDetail.description;
                if (orderData.debug_id) msg += ' (' + orderData.debug_id + ')';
                return alert(msg); // Show a failure message
              }

              // Show a success message or redirect
              alert('Transaction completed!');
              // $("#payment-result-cc").text(`Payment success: \n ${JSON.stringify(orderData)}`);
              $("#payment-result-cc").jsonViewer(orderData);
            })
          }).catch(function (err) {
            alert('Payment could not be captured! ' + JSON.stringify(err))
          });
        });
      });
    } else {
      // Hides card fields if the merchant isn't eligible
      document.querySelector("#card-form").style = 'display: none';
    }
  </script>

</body>

</html>