<div><a href="/">Home</a></div>
<h1>{{title}}</h1>
<h2><a href="https://developer.paypal.com/braintree/docs/reference/general/testing#valid-card-numbers"
    target="_blank">Valid Test Cards</a>
</h2>

<!-- test card -->
<div style="color:gray">
  <p><a href="https://developer.paypal.com/braintree/docs/guides/credit-cards/testing-go-live/node" target="_blank">Test Cards</a></p>

</div>
<br />

<!----------------- dropin2 example with token ------------------>
<div style="background-color:bisque">

  <h2>DropIn With Server - <font color="blue">using token</font>
  </h2>

  <button id="generate-token" style="display:none">generate token</button>
  <div style="width:1200px"><span id="token" style="font-size:7pt;word-wrap: break-word"></span></div>
  <div><input type="checkbox" id="use-stored-card" name="use-stored-card">Use Stored Card (Create clinet token with
    customerId)<input type="text" style="width: 180px" name="customer-id" id="customer-id" value="894738055"></div>
  <div><input type="checkbox" id="force-issuer-decline" name="force-issuer-decline">Force Issuer decline (will setup the
    decline amount in server)</div>
  <form id="dropin-payment-form" action="bt/hf/payment/checkout" method="post">
    <!-- Putting the empty container you plan to pass to
      `braintree.dropin.create` inside a form will make layout and flow
      easier to manage -->
    <div id="dropin-container1"></div>
    <input type="submit" id="dropin-submit-button" value="Dropin Submit" />
    <input type="hidden" id="nonce" name="payment_method_nonce" />
  </form>

</div>

<!-- includes the Braintree JS client SDK -->

<!-- Load the PayPal JS SDK with your PayPal Client ID-->
<script
  src="https://www.paypal.com/sdk/js?client-id=AaLfG87rC4XN5QisWLhUw27uFUE0KypDXHNySFuya-jNbzKIE4s4a6Yu2q8ylFhMPgw3KflYRGc8Uhjz"></script>

<!-- dropin -->
<script src="https://js.braintreegateway.com/web/dropin/1.36.1/js/dropin.min.js"></script>
<!-- hosted fields- -->
<script src="https://js.braintreegateway.com/web/3.85.3/js/client.min.js"></script>
<script>
  
  // -----------------------------------------------------------------
  // Dropin2 example
  // -----------------------------------------------------------------
  var customerInput = $("#customer-id")   // customerId with saved credit card as payment method in vault
  var customerId = customerInput.val();
  customerInput.keyup(function () {
    customerId = customerInput.val();
    console.log("key up");
    console.log(customerId);
  });
  var tokenSpan = document.querySelector('#token')
  var token = undefined;
  var button1 = document.querySelector('#generate-token');
  var payButton = document.querySelector('#pay');
  var generateClientTokenUrl = '/bt/hf/payment/client_token';
  $("#pay").hide();
  $("#dropin-submit-button").hide();

  button1.addEventListener('click', function () {
    $.ajax({
      type: 'GET',
      url: generateClientTokenUrl
    }).done(function (result) {
      // console.log(result);
      token = result;
      tokenSpan.innerHTML = `<p style='color:green;font-size:12pt'>Token created Successfully:  ${token.substring(1,8)}...</p>`;

      const form = document.getElementById('dropin-payment-form');

      braintree.dropin.create({
        authorization: token,
        container: '#dropin-container1'
      }, (error, dropinInstance) => {
        if (error) { console.error(error); }

        $("#dropin-submit-button").show();
        form.addEventListener('submit', event => {
          event.preventDefault();

          dropinInstance.requestPaymentMethod((error, payload) => {
            if (error) { console.error(error); }
            // console.log(payload);

            // Step four: when the user is ready to complete their
            //   transaction, use the dropinInstance to get a payment
            //   method nonce for the user's selected payment method, then add
            //   it a the hidden field before submitting the complete form to
            //   a server-side integration
            document.getElementById('nonce').value = payload.nonce;
            alert(payload.nonce);
            form.submit();
          });
        });
      });
     

    });

  });
  // to generate access token
  button1.click();

  var checkBoxUseStoredCard = $("#use-stored-card");
  checkBoxUseStoredCard.change(function (event) {
    console.log("checkboxChanged");
    var generateClientTokenWithCustomerId = checkBoxUseStoredCard[0].checked;
    if (generateClientTokenWithCustomerId) {
      generateClientTokenUrl = `/bt/vault/payment/client_token/${customerId}`
      $('#dropin-container1').empty();

    }
    button1.click();

  });

  
</script>