<html>

<head>

  <meta charset="utf-8" />
  <!-- Optimal rendering on mobile devices. -->
  <meta name="viewport" content="width=device-width, initial-scale=1">
</head>

<body>

  <div class="loading" id="loading-button">Loading paypal button...</div>

  <div><a href="/">Home</a></div>
  <h1>{{title}}</h1>
  <h2>Note</h2>
  <p>This example uses a hard coded Billing Agreement: B-29S75814H84296230, in order to demo the returning user UX</p>
  <p>A real merchant will generally get the BA as a property of the user profile</p>
  <br><a href="https://developer.paypal.com/limited-release/pay-later-billing-agreements-sdk/returning-buyer/">
    Link to docs with BA (not working as of Jun-2023</a>

    <br><a href="https://developer.paypal.com/docs/checkout/save-payment-methods/during-purchase/js-sdk/paypal/">
    Link to docs with Vault V3</a>

    

  <div id="payment-view">
    <!-- Buttons container -->
    <div style="padding:10px">
      <table border="0" align="left" valign="top" bgcolor="#FFFFFF" style="width: 39%">
        <tr>
          <td>
            <div id="paypal-button-container"></div>
          </td>
        </tr>
      </table>
    </div>



  </div>
  <div>
    <span id="payment-result">&nbsp; </span>
    <span colspan="2" id="payment-result-cc">&nbsp;</span>
  </div>

  <!-- FraudNet -->
  <script type="application/json" fncls="fnparams-dede7cc5-15fd-4c75-a9f4-36c430ee3a99">
    {
        "f":"90e11051-90a7-463b-a636-8b11b0701a75",
        "s":"ERAN_M_US",   
        "sandbox": true
    }
  </script>
  <script type="text/javascript" src="https://c.paypal.com/da/r/fb.js"></script>


  <!-- Implementation -->
  {{!--
  <script src="https://unpkg.com/@paypal/paypal-js@5.0.3/dist/iife/paypal-js.min.js"></script> --}}


  {{!-- Page Logic --}}
  <script>

    $("#loading-button").show();
    let orderId;
    var globalUserIdToken = "";
    // let paypal;

    try {

      const myDataClientPromise = new Promise(generateDataClientToken);
      myDataClientPromise.then((data) => {

        console.log("resolved client token:", data);

        var script = document.createElement('script');
        var scriptSrc = "https://www.paypal.com/sdk/js?client-id=AZjPmiH8MFbpWiO_y_WNWjyemnCVCAnpRPGE9_DB4mp8iBbjPfPLViZUhvoRifOjROWxVVWx8nJg_szi";
        // script.async = false;  
        script.src = scriptSrc;
        script.setAttribute("data-user-id-token",globalUserIdToken);
        document.body.appendChild(script);
        
        console.log("script loaded");


        try {
         // window.setTimeout(() =>  {loadUiControls()},1500);
          script.onload = () => {
            loadUiControls();

          }



        }
        catch (error) {
          console.error("failed to render the PayPal Buttons", error);
        }


      });
    }

    catch (error) {
      console.error("failed to load the PayPal JS SDK script", error);
    }

    function generateDataClientToken(resolve, reject) {

      $.ajax('ppapi/auth/accesstoken/generate', {
        type: 'POST',  // http method
        data: {},  // data to submit
        success: function (data, status, xhr) {
          console.log(data);
          const accesstoken = data.access_token;


          $.ajax('ppapi/auth/clienttoken/generate/baid', {
            type: 'POST',
            headers: {
              'Authorization': `Bearer ${accesstoken}`
            },
            data: { baId: "B-29S75814H84296230" },
            success: function (data, status, xhr) {

              console.log(data.client_token);
              globalUserIdToken = data.id_token;
              resolve(data.id_token);
            },
            error: function (jqXhr, textStatus, errorMessage) {
              console.log(errorMessage);
              reject(errorMessage);
            }

          });

        },
        error: function (jqXhr, textStatus, errorMessage) {
          console.log(errorMessage);
          reject(errorMessage);
        }
      });
    }

    var loadUiControls = function() {
      console.log("loadUiControls called");
      // Displays PayPal buttons
      paypal.Buttons({
        style: {
          layout: 'vertical'
        },
        createOrder: function (data, actions) {
          return actions.order.create({
            purchase_units: [{
              amount: {
                value: "13.00"
              }
            }]
          });
        },
        onApprove: function (data, actions) {
          return actions.order.capture().then(function (details) {
           
            $("#payment-result").jsonViewer(details);
            document.querySelector("#payment-view").style = 'display: none';

          });
        }
      }).render("#paypal-button-container").then(() => {
        console.log("render executed");
        $("#loading-button").hide();
      });

    }
  </script>



</body>

</html>