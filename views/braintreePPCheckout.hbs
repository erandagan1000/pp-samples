<div><a href="/">Home</a></div>
<h1>{{title}}</h1>
<hr>

<!---------------- Paypal Button ------------------>
<div>Amount: <input type="text" id="input-amount" style="width:100px" value="44"></div>
<div>Currency: <input type="text" id="input-currency" style="width:100px" value="USD"></div>
<div>authorize or capture: <input type="text" id="auth-or-capture" style="width:100px" value="capture"></div>
<div>
  <div id="paypal-button"></div>
</div>


<div>
  {{!-- <button id="generate-token">Generate Access Token</button> --}}
  <div class="loading" id="loading-token">Generating access token...</div>
  <div style="inline-size: 1350px;overflow-wrap: break-word; ">
    <p>Access token: </p>
    <div id="token" style="font-size: 6pt;"></div>
  </div>


  <div class="loading" id="loading-button">Loading paypal button...</div>

</div>
<!-------- results -------------------->
<div style="inline-size: 1350px;overflow-wrap: break-word; ">
  <p>OnApprove payload: </p>
  <div id="approve-payload">&nbsp;</div>
</div>

<div style="inline-size: 1350px;overflow-wrap: break-word; ">
  <p>Checkout Server message: </p>
  <div id="checkout-message">&nbsp;</div>
</div>

<div style="inline-size: 1350px;overflow-wrap: break-word; ">
  <p>Checkout Server result: </p>
  <div id="checkout-result">&nbsp;</div>
</div>

<!-- includes the Braintree JS client SDK -->
<!-- Load the client component. -->
<script src="https://js.braintreegateway.com/web/3.97.1/js/client.min.js"></script>

<!-- Load the PayPal Checkout component. -->
<script src="https://js.braintreegateway.com/web/3.97.1/js/paypal-checkout.min.js"></script>

<script>

  var selectedCurrency = 'USD'   // e.g. EUR or USD
  var tokenSpan = document.querySelector('#token')
  var token = undefined;

  var amountElement = $("#input-amount");
  var amount = amountElement.val();
  var qty = 4;

  amountElement.change(function () {
    amount = amountElement.val();
    console.log(amount);
  });

  var currencyElement = $("#input-currency");
  var currency = currencyElement.val();

  var authOrCaptureElement = $("#auth-or-capture");
  var authOrCapture = authOrCaptureElement.val();

  authOrCaptureElement.change(function () {
    authOrCapture = authOrCaptureElement.val();
    console.log(authOrCapture);
    initBtPaypalCheckout(token);


  });

  currencyElement.change(function () {
    selectedCurrency = currencyElement.val();
    console.log(selectedCurrency);
    generatePayPalButton();  // required if currency was changed

  });


  $("#paypal-button").hide();

  function generatePayPalButton() {
    $.ajax({
      type: 'GET',
      url: `/bt/vault/payment/client_token?currency=${selectedCurrency}`
    }).done(function (result) {
      // console.log(result);
      
      token = result;
      tokenSpan.innerHTML = `${token}`;
      $("#loading-token").hide();

      initBtPaypalCheckout(token);
    });
  }

  generatePayPalButton();


  // -----------------------------------------------------------------

  // paypal checkout
  function initBtPaypalCheckout(token) {
    $("#loading-button").show();
    // promise style
    // Create a client.
    braintree.client.create({
      authorization: token
    }).then(function (clientInstance) {
      // Create a PayPal Checkout component.
      return braintree.paypalCheckout.create({
        client: clientInstance
      });
    })
      .then(function (paypalCheckoutInstance) {
        console.log(selectedCurrency);
      
        var ppJsSdkOptions = {
          currency: selectedCurrency,
          intent: authOrCapture,
          //// options object here: https://braintree.github.io/braintree-web/current/PayPalCheckout.html#loadPayPalSDK
          // dataAttributes: {}
          // "components": 'buttons,messages', //optional
        };

        return paypalCheckoutInstance.loadPayPalSDK(ppJsSdkOptions);
      })
      .then(function (paypalCheckoutInstance) {


        return paypal.Buttons({

          fundingSource: paypal.FUNDING.PAYPAL,
          // commit: false, // Continue button, default is true - PayNow button

          createOrder: function () {
            return paypalCheckoutInstance.createPayment({
              flow: 'checkout', // Required
              amount: amount*qty, // Required
              currency: selectedCurrency, // Required, must match the currency passed in with loadPayPalSDK
              intent: authOrCapture, // Must match the intent passed in with loadPayPalSDK

              //offerCredit: true, //optional - offer Credit option
              enableShippingAddress: true,
              shippingAddressEditable: false,
              {{!-- shippingAddressOverride: {
                recipientName: 'Scruff McGruff',
                line1: '1234 Main St.',
                line2: 'Unit 1',
                city: 'Chicago',
                countryCode: 'US',
                postalCode: '60652',
                state: 'IL',
                phone: '123.456.7890'
              } --}}
            });
          },

          onApprove: function (data, actions) {

            console.log("buyer approved, you can calculate taxes and update amount and send nonce to server with updated amount");
            console.log("data: ", data, "actions: ", actions);

            return paypalCheckoutInstance.tokenizePayment(data).then(function (payload) {
              // Submit `payload.nonce` to your server
              $.ajax({
                type: 'POST',
                url: '/bt/vault/payment/checkout',
                data: {
                  'paymentMethodNonce': payload.nonce,
                  'amount': amount,
                  'currency': selectedCurrency,
                  'isAuthorizeRequest': authOrCapture == 'authorize'

                }
              }).done(function (result) {

                if (result.success) {
                  var approveDiv = document.querySelector('#approve-payload');
                  var captureUrl = '', captureHtml = '', voidUrl= '', voidHtml = '';
                  if (authOrCapture == 'authorize') {
                    captureUrl = `http://localhost:3000/bt/capture/${result.transaction.id}`
                    captureHtml = `<div style="margin-top:5px"><h2>Transaction Authorized Successfully.<p><a href='${captureUrl}' target=_blank>Click to CAPTURE: ${result.transaction.id}</a></p></h2></div>`;

                    voidUrl = `http://localhost:3000/bt/void/${result.transaction.id}`
                    voidHtml = `<div style="margin-top:5px"><h2>Transaction Authorized Successfully.<p><a href='${voidUrl}' target=_blank>Click to VOID: ${result.transaction.id}</a></p></h2></div>`;
                  }
                  approveDiv.innerHTML = JSON.stringify(payload) + '  ' + captureHtml + ' | ' + voidHtml;

                  $('#checkout-message').html('<h1>Success</h1><p>BT Checkout is working! Check your <a href="https://sandbox.braintreegateway.com/login">sandbox Control Panel</a> for your test transactions.</p><p>Refresh to try another transaction.</p><p><a href="/">Home</a></p>');

                  var serverResultDiv = document.querySelector('#checkout-result');
                  // serverResultDiv.innerHTML = JSON.stringify(result);

                  $("#checkout-result").jsonViewer(result);


                } else {
                  console.log(result);
                  $('#checkout-message').html(`<h1>Error</h1><p>Check your console.</p><p>${result?.transaction?.additionalProcessorResponse || result.message}</p>`);
                  $("#checkout-result").jsonViewer(result);
                }
              });
            });
          },

          onCancel: function (data) {
            console.log('PayPal payment cancelled', JSON.stringify(data, 0, 2));
          },

          onError: function (err) {
            console.error('PayPal error', err);
          }
        }).render('#paypal-button');
      }).then(function () {
        // The PayPal button will be rendered in an html element with the ID
        // `paypal-button`. This function will be called when the PayPal button
        // is set up and ready to be used
        $("#paypal-button").show();
        $("#loading-button").hide();
      });
  }


</script>