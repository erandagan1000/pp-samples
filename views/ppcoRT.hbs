<div><a href="/">Home</a></div>
<h1>{{title}}</h1>
<div class="loading" id="loading-button">Loading paypal button...</div>
<div id="paypal-button-container"></div>
<div id="paypal-result-container"></div>
{{!-- PP Rest API simple --}}
{{!-- client-id=AeGY.. #App: MerchantApp | Account: eran.m.il@merchant.com (BusinessPro) --}}

{{!-- This DIV is relevant if doing manual integration with page redirect- NOT RECOMENDED --}}
{{!-- <div id="pp-ba-approve-result">
  <p>Details</p>
  <p>EC Token: <span id="ec-token-container">{{ec_token}}</span></p>
  <p>Billing Agreement Token: <span id="ba-id-container">{{ba_token}}</span></p>
  <p><button id="ba-generate" onclick="generateBa()">Generate BA</button></p>
  <p>Billing agreement Create Result:</p>
  <p id="ba-response"></p>
</div> --}}
<p>OnApprove Result - data to send to merchant server</p>
<div id="pp-rtco-on-approve-result"></div>
<p>Server Result - response from merchant server - post BA creation</p>
<div id="pp-rtco-server-result"></div>
<hr>

{{!-------------------------------------------------------------------------------}}
<script
  src="https://www.paypal.com/sdk/js?client-id=AeGYWEKwAbpNAOQaBkUyNXAalNwEZ5ialX-niqRbbcdZkLY8t-YuOMBLhDJUTP1JWKmJMMCFAeOWUSzF&currency=USD&components=buttons&vault=true">
  </script>

<script>
  var globalAccessToken = "";
  var globalClientToken = "";
  var baTokenId = "";
  var baId = "";

  $("#loading-button").show();
  paypal.Buttons({
    style: {
      layout: "vertical",
      color: "gold",
      shape: "rect",
      label: "paypal",
      tagline: false,
      height: 55
    },
    createBillingAgreement: function (data, actions) {
      console.log(data, baTokenId) ;
      return baTokenId;
    },
    onApprove: function (data, actions) {
      console.log("The customer approved the Billing Agreement in the PayPal Checkout Flow", { data, actions });

      $("#pp-rtco-on-approve-result").jsonViewer(data);

      // Here we can call the merchant api and save the BA to the merchant DB together with the user.
      let authStr = globalAccessToken;
      if (globalAccessToken.indexOf('Bearer') == -1) {
        authStr = `Bearer ${globalAccessToken}`;
      }

      console.log('data.billingToken',data.billingToken);
      $.ajax('/ppapi/rt/billing-agreement', {
        type: 'POST',
        headers: {'Authorization': authStr},
        // headers: undefined,
        data: { token_id: data.billingToken },
        success: function (data, status, xhr) {
          console.log(data);
          $("#pp-rtco-server-result").jsonViewer(data);

        },
        error: function (jqXhr, textStatus, errorMessage) {
          console.log(errorMessage);
        }
      });

    },
    onCancel: function () {
      console.log("The customer cancelled the PayPal Checkout Flow");
    },
    onError: function () {
      console.log("An error occurred.")
    }
  }).render('#paypal-button-container').then(function () {
    $("#loading-button").hide();
  });

  function generateBaToken() {
    $.ajax('ppapi/rt/flow/start', {
      type: 'POST',
      data: {},
      success: function (data, status, xhr) {
        console.log(data);
        baTokenId = data.token_id;
        globalAccessToken = data.accessToken;
        // const approvalUrl = data.links.find(l => l.rel == 'approval_url').href;
        // if (approvalUrl) {
        //   window.open(approvalUrl);
        //  }

      },
      error: function (jqXhr, textStatus, errorMessage) {
        console.log(errorMessage);
      }
    });
  }
  //start
  generateBaToken();


  // #region Integration using page redirect - NOT RECOMENDED 
  /* // Integration using page redirect - NOT RECOMENDED
     // When merchant use his own button and create the order by calling his API, and from there make a call to PP Rest API (server2Server).
     // he procide the return URL and once buyer approve the purchase using his PP account, the page redirect to the return URL with the
     // EC Token EC=xxxx in queryparameter. Then merchant code needs to take this EC token and send it to server to complete payment
     // this can be done also in server while user see the loading indicator until all flow completed.  
    
    paypal.Buttons({
  
      // Sets up the transaction when a payment button is clicked
      createOrder: function (data, actions) {
  
        $.ajax('ppapi/rt/flow/start', {
          type: 'POST',
          data: {},
          success: function (data, status, xhr) {
            console.log(data);
            const approvalUrl = data.links.find(l => l.rel == 'approval_url').href;
            if (approvalUrl) {
              window.open(approvalUrl);
            }
  
          },
          error: function (jqXhr, textStatus, errorMessage) {
            console.log(errorMessage);
          }
        });
  
      }
    }).render('#paypal-button-container').then(function () {
      $("#loading-button").hide();
    });*/

  function generateBa() {
    $.ajax('/ppapi/rt/flow/create-billing-agreement', {
      type: 'POST',
      data: { token_id: baTokenId },
      success: function (data, status, xhr) {
        console.log(data);
        $("#ba-response").html(JSON.stringify(data));

      },
      error: function (jqXhr, textStatus, errorMessage) {
        console.log(errorMessage);
      }
    });

  }
  // #endregion

  // #region MANUAL INTEGRATION - NOT RECOMENDED
  // When merchant does not want to use the smart button but his own button and call the server to create order or billing agreement and sending the return URL
  // After user approves, in response he gets the return url (provided by caller) with EC-token and BA-token , in this example it is returned to client, but the return URL can be 
  // another endpoint which can read the query parameter and complete the transaction (server2Server)
  // http://localhost:3000/ppcort?token=EC-4H4952447G899934X&ba_token=BA-65L40004CN2398355
  const spanEcToken = $("#ec-token-container");
  const spanBaToken = $("#ba-id-container");
  if (spanEcToken.text().length > 0) {
    $("#pp-ba-approve-result").css('visibility', 'visible');
    baTokenId = spanBaToken.text();
  }
  else {
    $("#pp-ba-approve-result").css('visibility', 'hidden');
  }

    // #endregion


</script>

