<div><a href="/">Home</a></div>
<h1>{{title}}</h1>
<table style="margin-top:15px">
  <tr>
    <th>ACTION</th>
    <th>RESPONSE</th>
  </tr>
  {{!-- CREATE ORDER --}}
  <tr>
    <td>
      <button id="create-order-button" onclick="createPayment()">Create Order</button>
    </td>
    <td class="seperator">
      <div id="create-order-response"></div>
      <div><span id="create-order-approve-container"></span> </div>
    </td>
  </tr>
  {{!-- GET ORDER DETAILS --}}
  <tr>
    <td>
      <button disabled id="get-order-details-button" onclick="getPaymentDetails()">Get Order Details</button>
    </td>
    <td class="seperator">
      <div id="ba-response"></div>
    </td>
  </tr>
  {{!-- CAPTURE ORDER --}}
  <tr>
    <td>
      <button disabled id="capture-pay" onclick="captureOrder()">Capture Order</button>
    </td>
    <td class="seperator">
      <div id="capture-pay-response"></div>
    </td>
  </tr>
  {{!-- UPDATE ORDER --}}
   <tr>
    <td>
      <button  id="order-update" onclick="updateOrder()">Update Order</button>
    </td>
    <td class="seperator">
      <div id="order-update-response"></div>
    </td>
  </tr>
</table>


<div id="payment-view">
  <!-- Buttons container -->
  <div style="padding:10px">
    <table border="0" align="left" valign="top" bgcolor="#FFFFFF" style="width: 39%">
      <tr>
        <td colspan="2">
          <div id="paypal-button-container"></div>
        </td>
      </tr>
      <tr>
        <td colspan="2">&nbsp;</td>
      </tr>

    </table>
  </div>

</div>
<div>
  <span id="payment-result">&nbsp; </span>
  <span colspan="2" id="payment-result-cc">&nbsp;</span>

</div>


<!-- Implementation -->
<script>
  var globalAccessToken = "";
  var globalClientToken = "";
  var paymentId = "";
  var baId = "";
 
  var orderData = {
        intent: "sale",
        payer: {
          payment_method: "paypal"
        },
        transactions: [
          {
            amount: {
              currency: "USD",
              total: "125.00"
            },
            item_list: {
              items: [
                {
                  currency: "USD",
                  name: "House of Bruar",
                  price: "125.00",
                  quantity: "1"
                }
              ]
            }
          }
        ]
      }

  
  function createPayment() {
    $.ajax('/ppapi/payment/create', {
      type: 'POST',
      headers: {
        "Content-Type": "application/json"
      },
      data: JSON.stringify(orderData),
      success: function (data, status, xhr) {
        console.log(data);
        $("#create-order-response").html(JSON.stringify(data));
        $("#get-order-details-button").removeAttr("disabled");

        const links = data.links;
        const approveUrl = links.find((l) => l.rel == "approve" || l.rel == "payer-action" || l.rel == "approval_url")?.href;
        const captureUrl = links.find((l) => l.rel == "capture")?.href;
        $("#create-order-approve-container").html(`<p><b>Follow this url to: <br> APPROVE Order: <a target='_blank' href="${approveUrl}">Approve Order</a><br> CAPTURE Order: <a target='_blank' href="${captureUrl}">Capture Order</a></b></p>`);
        paymentId = data.paymentId;

      },
      error: function (jqXhr, textStatus, errorMessage) {
        console.log(errorMessage);
      }
    });

  }

  function getPaymentDetails() {

    $.ajax(`/ppapi/payment/${paymentId}`, {
      type: 'GET',
      headers: {"Content-Type": "application/json"},
      data: { token_id: paymentId },
      success: function (data, status, xhr) {
        console.log(data);
        $("#ba-response").html(JSON.stringify(data));
        $("#get-ba-details").removeAttr("disabled");
        $("#ba-pay").removeAttr("disabled");
        baId = data.id;

      },
      error: function (jqXhr, textStatus, errorMessage) {
        debugger;
        console.log(errorMessage);
      }
    });

  }
  
  function updateOrder() {
    var guid = uuidv4();
    
    $.ajax(`/ppapi/payment/update`, {
      type: 'PATCH',
      headers: {
        "Content-Type": "application/json"
      },
      data: JSON.stringify({
          orderID: paymentId,
          //selectedShippingOption: undefined,
          //baseOrderAmount,
          updatedAddress: {
            recipient_name: "Ifeanyi Ezenagu",
            phone: "+12404443411",
            line1: "12809 RICKER RD",
            city: "UPPER MARLBORO",
            country_code: "US",
            postal_code: "20772",
            state: "MD"
          }
        }),
      success: function (data, status, xhr) {
        console.log(data);
        $("#order-update-response").html(JSON.stringify(data)).css('color', 'green');;

      },
      error: function (jqXhr, textStatus, errorMessage) {
        console.log(errorMessage);
        $("#order-update-response").html(JSON.stringify(jqXhr.responseJSON)).css('color', 'red');
      }
    });

  }

  
  function captureOrder() {
    var guid = uuidv4();
    
    $.ajax(`/ppapi/payment/execute-payment`, {
      type: 'POST',
      headers: {
        "Content-Type": "application/json"
      },
      data: JSON.stringify({paymentId}),
      success: function (data, status, xhr) {
        console.log(data);
        $("#capture-pay-response").html(JSON.stringify(data)).css('color', 'green');;

      },
      error: function (jqXhr, textStatus, errorMessage) {
        console.log(errorMessage);
        $("#capture-pay-response").html(JSON.stringify(jqXhr.responseJSON)).css('color', 'red');
      }
    });

  }

  
  function uuidv4() {
    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>
      (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
    );
  }


</script>