<div><a href="/">Home</a></div>
<h1>{{title}}</h1>
<hr>

<!---------------- Paypal Button ------------------>
<div>Amount: <input type="text" id="input-amount" style="width:100px" value="400"></div>
<div>Currency: <input type="text" id="input-currency" style="width:100px" value="USD"></div>
<hr>
{{!-- <div>PAYMENT ID: <input type="text" id="input-payment-id" style="width:400px" placeholder="payment Id from return URL After payment wa approved"></div>
<div>EC TOKEN: <input type="text" id="input-ec-token" style="width:400px" placeholder="EC Token from return URL After payment wa approved"></div> --}}
<div>PAYER ID: <input type="text" id="input-payer-id" style="width:500px" placeholder="Payer Id from return URL After payment wa approved"></div>
 {{!-- paymentId=PAYID-MRMCLUA5NB57341DS6735942&token=EC-0C016832J98643031&PayerID=CTNJMD9U7U9N2 --}}

<p><a href="https://engineering.paypalcorp.com/confluence/display/~okeskin/SDK-less+Braintree+PayPal+Integration">Docs Confluence</a> </p>

<table style="margin-top:15px">
  <tr>
    <th>ACTION</th>
    <th>RESPONSE</th>
  </tr>
  {{!-- CREATE ORDER --}}
  <tr>
    <td>
      <button id="create-order-button" onclick="createOrder()">[1] Create Order</button>
    </td>
    <td class="seperator">
      <div id="create-order-response"></div>
      <div><span id="create-order-approve-container"></span> </div>
    </td>
  </tr>
  {{!-- CREATE NONCE --}}
  <tr>
    <td>
      <button  id="get-order-details-button" onclick="createNonce()">[2] Create Nonce</button>
    </td>
    <td class="seperator">
      <div id="create-nonce-response"></div>
    </td>
  </tr>
  {{!-- CAPTURE NONCE --}}
  <tr>
    <td>
      <button id="ba-pay" onclick="captureNonce()">[3] Capture Nonce</button>
    </td>
    <td class="seperator">
      <div id="capture-nonce-response"></div>
    </td>
  </tr>
</table>



<!-- Implementation -->
<script>
  var amountElement = $("#input-amount");
  var amount = amountElement.val();

  var currencyElement = $("#input-currency");
  var currency = currencyElement.val();

  var orderData = {
    reference_id: uuidv4(),
    amount: { currency_code: currency, value: amount }
  };

  amountElement.change(function () {
    amount = amountElement.val();
    orderData.amount.value = amount;
    console.log(amount);
  });

  currencyElement.change(function () {
    currency = currencyElement.val();
    orderData.amount.currency_code = currency;
    console.log(currency);
  });

 
  

  var paymentId = "";
  var payerId = "" ;
  var paymentToken = "";
  var approvalUrl = "";
  var paymentMethodId = "";

  

  function createOrder() {
    $.ajax('/bt/gql/create-payment', {
      type: 'POST',
      headers: {"Content-Type": "application/json"},
      data: JSON.stringify(orderData),
      success: function (data, status, xhr) {
        console.log(data);
        $("#create-order-response").html(JSON.stringify(data));
        $("#get-order-details-button").removeAttr("disabled");
       
        debugger;
        const approveUrl = data.createPayPalOneTimePayment.approvalUrl;
        paymentToken = approveUrl.split("=")[2];
        paymentId = data.createPayPalOneTimePayment.paymentId;
        
        $("#create-order-approve-container").html(`<p><b>Follow this url to: <br> APPROVE Order: <a target='_blank' href="${approveUrl}">Approve Order</a></b></p>`);
        orderId = data.id;

      },
      error: function (jqXhr, textStatus, errorMessage) {
        console.log(errorMessage);
      }
    });

  }

  function createNonce() {
    debugger;
     {{!-- paymentId = $("#input-payment-id").val());
     paymentToken = $("#input-ec-token").val(); --}}
     payerId =$("#input-payer-id").val();

    var payload = {
      selectedCurrency: orderData.amount.currency_code,
      paymentToken,
      paymentId,
      payerId

    };

    $.ajax('/bt/gql/create-nonce', {
      type: 'POST',
      headers: {"Content-Type": "application/json"},
      data: JSON.stringify(payload),
      success: function (data, status, xhr) {
        console.log(data);
        $("#create-nonce-response").html(JSON.stringify(data));
        $("#create-nonce-button").removeAttr("disabled");

        debugger;
        paymentMethodId = data.tokenizePayPalOneTimePayment.paymentMethod.id;
        console.log("paymentMethodId: ", paymentMethodId);
        
      },
      error: function (jqXhr, textStatus, errorMessage) {
        console.log(errorMessage);
      }
    });

  }
  

  function captureNonce() {
    var guid = uuidv4();

    var payload = {
      selectedCurrency: orderData.amount.currency_code,
      paymentMethodId,
      amount: orderData.amount.value
    };

    $.ajax(`/bt/gql/capture-nonce`, {
      type: 'POST',
      headers: {"Content-Type": "application/json"},
      data: JSON.stringify(payload),
      success: function (data, status, xhr) {
        console.log(data);
        $("#capture-nonce-response").html(JSON.stringify(data)).css('color', 'green');;

      },
      error: function (jqXhr, textStatus, errorMessage) {
        console.log(errorMessage);
        $("#capture-nonce-response").html(JSON.stringify(jqXhr.responseJSON)).css('color', 'red');
      }
    });

  }

  function uuidv4() {
    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>
      (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
    );
  }


</script>























